### Configurations from config server
jwt-user:
  keys:
    access-token-key: '{"kty":"oct","k":"h4dfgRX5ZRZooHem3mEnctZ-KtR9FoESgCnH-3BNgde8"}'
#
redis-user:
  host: 192.168.0.125
  port: 6379
#
discovery-service-user:
  server:
    hostname: localhost
    port: 8010

#
app:
  gateway:
    api-prefix: /api/v1
###


spring:
  application:
    name: api-gateway
  config:
    import: optional:configserver:http://${CONFIG_SERVER_USER}:${CONFIG_SERVER_PASSWORD}@${CONFIG_SERVER_HOST:localhost}:${CONFIG_SERVER_PORT:8012}

  data.redis:
    host: ${redis-user.host}
    port: ${redis-user.port}

  cloud:
    gateway:
      httpclient:
        connect-timeout: 1000
        response-timeout: 5s
      default-filters:
        - name: RequestRateLimiter
          args:
            rate-limiter: '#{@redisRateLimiter}'
            key-resolver: '#{@ipKeyResolver}'
        - RewritePath=${app.gateway.api-prefix}/?(?<segment>.*), /$\{segment}

      routes:
        ### Authentication and user routes
        - id: auth-service #login, refresh, logout
          uri: lb://authentication-ws
          predicates:
            - Path=${app.gateway.api-prefix}/auth/**

        - id: current-user #get current user
          uri: lb://user-profile-ws
          predicates:
            - Path=${app.gateway.api-prefix}/users/me
            - Method=GET
          filters:
            - JwtAuthorizationFilter

        - id: current-user-settings
          uri: lb://user-settings-ws
          predicates:
            - Path=${app.gateway.api-prefix}/users/me/settings
            - Method=GET
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing user workspace
        - id: create-get-workspaces #get all users workspaces or POST new one
          uri: lb://workspace-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces
            - Method=POST, GET
          filters:
            - JwtAuthorizationFilter

        - id: delete-workspace-with-id #delete workspace with specified id
          uri: lb://workspace-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}
            - Method= DELETE
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing user desks
        ####################################
        - id: create-get-desks #get all users desks in given workspace or get all desks in workspace
          uri: lb://desk-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks
            - Method=POST, GET
          filters:
            - JwtAuthorizationFilter

        - id: delete-desks-with-id #delete desk with specified id
          uri: lb://desk-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}
            - Method=DELETE
          filters:
            - JwtAuthorizationFilter

        - id: update-desks-order #delete desk with specified id
          uri: lb://desk-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/order
            - Method=PATCH
          filters:
            - JwtAuthorizationFilter

        - id: add-notification #delete desk with specified id
          uri: lb://desk-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/notifications
            - Method=POST
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing user tasks
        #######################################
        - id: create-get-tasks #create task or get full list
          uri: lb://task-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks
            - Method=POST, GET
          filters:
            - JwtAuthorizationFilter

        - id: delete-task #delete task by id
          uri: lb://task-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}
            - Method=DELETE
          filters:
            - JwtAuthorizationFilter

        - id: update-task-order #update task order
          uri: lb://task-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/order
            - Method=PATCH
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing  COMMENTS
        #######################################
        - id: create-get-tasks #create task or get full list
          uri: lb://task-comments-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/comments
            - Method=POST, GET
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing users permissions
        ######################################
        - id: create-get-permissions #create permission
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions/by-email
            - Method=POST
          filters:
            - JwtAuthorizationFilter

        - id: create-permissions-by-id #create task or get full list
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions/by-id
            - Method=POST
          filters:
            - JwtAuthorizationFilter

        - id: get-all-permissions # get full list of permissions
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions
            - Method= GET
          filters:
            - JwtAuthorizationFilter

        - id: revoke-all_permissions #create task or get full list
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions/{userId}
            - Method= DELETE
          filters:
            - JwtAuthorizationFilter

        #        - id: delete-task #delete task by id
        #          uri: lb://task-manager-rs
        #          predicates:
        #            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}
        #            - Method=DELETE
        #          filters:
        #            - JwtAuthorizationFilter
        #
        #        - id: update-task-order #update task order
        #          uri: lb://task-manager-rs
        #          predicates:
        #            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/order
        #            - Method=PATCH
        #          filters:
        #            - JwtAuthorizationFilter

        ### Routes for aggregation
        #######################################
        - id: get-workspaces-full #full information about workspace - with inner desks and tasks
          uri: lb://aggregator-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/full
            - Method=GET
          filters:
            - JwtAuthorizationFilter

        - id: get-desk-full #full information about desk - with inner desks and tasks
          uri: lb://aggregator-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/full
            - Method=GET
          filters:
            - JwtAuthorizationFilter

        - id: get-task-comments-count #information about comments on each task
          uri: lb://aggregator-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/comments-count
            - Method=GET
          filters:
            - JwtAuthorizationFilter

server.port: 8080

eureka:
  client:
    service-url:
      defaultZone: http://${discovery-service-user.server.hostname}:${discovery-service-user.server.port}/eureka
    register-with-eureka: false
  instance:
    prefer-ip-address: true

### Configurations from config server
jwt-user:
  keys:
    access-token-key: '{"kty":"oct","k":"h4dfgRX5ZRZooHem3mEnctZ-KtR9FoESgCnH-3BNgde8"}'
#
redis-user:
  host: 192.168.0.125
  port: 6379
#
discovery-service-user:
  server:
    hostname: localhost
    port: 8010

#
app:
  gateway:
    api-prefix: /api/v1
    rate-limiter:
      replenish: 200
      burst: 300
      requested: 1
  frontend:
    origin: "http://192.168.0.190:5173"
###

spring:
  application:
    name: api-gateway
  config:
    import: optional:configserver:http://${CONFIG_SERVER_USER}:${CONFIG_SERVER_PASSWORD}@${CONFIG_SERVER_HOST:localhost}:${CONFIG_SERVER_PORT:8012}

  data.redis:
    host: ${redis-user.host}
    port: ${redis-user.port}

  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - ${app.frontend.origin}
              - "http://localhost:5173"
              - "http://localhost:80"
              - "http://localhost"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true

      httpclient:
        connect-timeout: 10000
        response-timeout: 30s
      default-filters:
        - name: RequestRateLimiter
          args:
            rate-limiter: '#{@redisRateLimiter}'
            key-resolver: '#{@ipKeyResolver}'
        - RewritePath=${app.gateway.api-prefix}/?(?<segment>.*), /$\{segment}

      routes:
        ### Authentication and user routes
        - id: auth-service-register
          uri: lb://authentication-ws
          predicates:
            - Path=${app.gateway.api-prefix}/auth/sign-up

        - id: auth-service-login
          uri: lb://authentication-ws
          predicates:
            - Path=${app.gateway.api-prefix}/auth/sign-in

        - id: auth-service-logout
          uri: lb://authentication-ws
          predicates:
            - Path=${app.gateway.api-prefix}/auth/logout

        - id: auth-service-refresh
          uri: lb://authentication-ws
          predicates:
            - Path=${app.gateway.api-prefix}/auth/refresh


        - id: auth-service #update email, password
          uri: lb://authentication-ws
          predicates:
            - Path=${app.gateway.api-prefix}/auth/credentials/**
          filters:
            - JwtAuthorizationFilter


        - id: current-user #get current user #update avatar or personal info
          uri: lb://user-profile-ws
          predicates:
            - Path=${app.gateway.api-prefix}/users/**
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing user workspace
        - id: create-get-workspaces #get all users workspaces or POST new one
          uri: lb://workspace-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces
            - Method=POST, GET, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: delete-workspace-with-id #delete workspace with specified id
          uri: lb://workspace-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}
            - Method=DELETE, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: update-workspace-with-id #update workspace with specified id
          uri: lb://workspace-manager-rs
          predicates:
            - |
              Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/name,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/cover,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/access
            - Method=PATCH, OPTIONS
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing user desks
        ####################################
        - id: create-get-desks #get all users desks in given workspace or get all desks in workspace
          uri: lb://desk-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks
            - Method=POST, GET, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: delete-desks-with-id #delete desk with specified id
          uri: lb://desk-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}
            - Method=DELETE, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: update-desks #delete desk with specified id
          uri: lb://desk-manager-rs
          predicates:
            - |
              Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/order,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/name,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/color
            - Method=PATCH, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: add-notification #delete desk with specified id
          uri: lb://desk-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/notifications
            - Method=POST
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing user tasks
        #######################################
        - id: create-get-tasks #create task or get full list
          uri: lb://task-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks
            - Method=OPTIONS, POST, GET
          filters:
            - JwtAuthorizationFilter

        - id: delete-task #delete task by id
          uri: lb://task-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}
            - Method=OPTIONS, DELETE
          filters:
            - JwtAuthorizationFilter

        - id: update-task #update task
          uri: lb://task-manager-rs
          predicates:
            - |
              Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/name,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/completion,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/order,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/color,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/cover,
              ${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/desk
            - Method=PATCH, OPTIONS
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing  COMMENTS
        #######################################
        - id: create-get-comments #create task or get full list
          uri: lb://task-comments-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/comments
            - Method=POST, GET, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: delete-comments #create task or get full list
          uri: lb://task-comments-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/comments/{commentId}
            - Method=DELETE, OPTIONS
          filters:
            - JwtAuthorizationFilter


        ### Routes for managing  Stickers
        #######################################
        - id: create-get-stickers #create task or get full list
          uri: lb://sticker-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/stickers
            - Method=POST, GET, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: delete-sticker #create task or get full list
          uri: lb://sticker-manager-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/stickers/{stickerId}
            - Method=DELETE, OPTIONS
          filters:
            - JwtAuthorizationFilter

        ### Routes for managing users permissions
        ######################################
        - id: create-get-permissions #create permission
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions/by-email
            - Method=POST, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: create-permissions-by-id #create permission
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions/by-id
            - Method=POST, OPTIONS
          filters:
            - JwtAuthorizationFilter

        - id: get-all-permissions # get full list of permissions
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions
            - Method= GET
          filters:
            - JwtAuthorizationFilter

        - id: revoke-all_permissions #remove permissions
          uri: lb://user-permission-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/permissions/{userId}
            - Method= DELETE, OPTIONS
          filters:
            - JwtAuthorizationFilter

        #        - id: delete-task #delete task by id
        #          uri: lb://task-manager-rs
        #          predicates:
        #            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}
        #            - Method=DELETE
        #          filters:
        #            - JwtAuthorizationFilter
        #
        #        - id: update-task-order #update task order
        #          uri: lb://task-manager-rs
        #          predicates:
        #            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/desks/{deskId}/tasks/{taskId}/order
        #            - Method=PATCH
        #          filters:
        #            - JwtAuthorizationFilter

        ### Routes for aggregation
        #######################################
        - id: get-workspaces-full #full information about workspace - with inner desks and tasks
          uri: lb://aggregator-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/full
            - Method=GET
          filters:
            - JwtAuthorizationFilter

        - id: get-workspaces-public-full #full information about public workspace - no need to authorize
          uri: lb://aggregator-rs
          predicates:
            - Path=${app.gateway.api-prefix}/public-workspaces/{workspaceId}/full
            - Method=GET

        - id: get-task-comments-count #information about comments on each task
          uri: lb://aggregator-rs
          predicates:
            - Path=${app.gateway.api-prefix}/workspaces/{workspaceId}/comments-count
            - Method=GET
          filters:
            - JwtAuthorizationFilter


          ###Routes for subscription to websockets for real time updating
        - id: subscribe-to-workspace-update #subscribe to websocket
          uri: lb://realtime-service
          predicates:
            - Path=${app.gateway.api-prefix}/websocket/**
          filters:
            - JwtAuthorizationFilter
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin


server.port: 8080

eureka:
  client:
    service-url:
      defaultZone: http://${discovery-service-user.server.hostname}:${discovery-service-user.server.port}/eureka
    register-with-eureka: false
  instance:
    prefer-ip-address: true
